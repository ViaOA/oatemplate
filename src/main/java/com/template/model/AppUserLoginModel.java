// Generated by OABuilder

package com.template.model;

import java.util.logging.*;
import com.viaoa.object.*;
import com.viaoa.annotation.*;
import com.viaoa.datasource.*;
import com.viaoa.hub.*;
import com.viaoa.util.*;
import com.viaoa.filter.*;
import com.template.model.oa.*;
import com.template.model.oa.propertypath.*;
import com.template.model.oa.search.*;
import com.template.model.oa.filter.*;
import com.template.model.search.*;
import com.template.model.filter.*;
import com.template.delegate.ModelDelegate;
import com.template.resource.Resource;

public class AppUserLoginModel extends OAObjectModel {
    private static Logger LOG = Logger.getLogger(AppUserLoginModel.class.getName());
    
    // Hubs
    protected Hub<AppUserLogin> hub;
    // selected appUserLogins
    protected Hub<AppUserLogin> hubMultiSelect;
    // detail hubs
    protected Hub<AppUser> hubAppUser;
    protected Hub<AppUserError> hubAppUserErrors;
    
    // ObjectModels
    protected AppUserModel modelAppUser;
    protected AppUserErrorModel modelAppUserErrors;
    
    public AppUserLoginModel() {
        setDisplayName("App User Login");
        setPluralDisplayName("App User Logins");
    }
    
    public AppUserLoginModel(Hub<AppUserLogin> hubAppUserLogin) {
        this();
        if (hubAppUserLogin != null) HubDelegate.setObjectClass(hubAppUserLogin, AppUserLogin.class);
        this.hub = hubAppUserLogin;
    }
    public AppUserLoginModel(AppUserLogin appUserLogin) {
        this();
        getHub().add(appUserLogin);
        getHub().setPos(0);
    }
    
    public Hub<AppUserLogin> getOriginalHub() {
        return getHub();
    }
    
    public Hub<AppUser> getAppUserHub() {
        if (hubAppUser != null) return hubAppUser;
        // this is the owner, use detailHub
        hubAppUser = getHub().getDetailHub(AppUserLogin.P_AppUser);
        return hubAppUser;
    }
    public Hub<AppUserError> getAppUserErrors() {
        if (hubAppUserErrors == null) {
            hubAppUserErrors = getHub().getDetailHub(AppUserLogin.P_AppUserErrors);
        }
        return hubAppUserErrors;
    }
    public AppUserLogin getAppUserLogin() {
        return getHub().getAO();
    }
    
    public Hub<AppUserLogin> getHub() {
        if (hub == null) {
            hub = new Hub<AppUserLogin>(AppUserLogin.class);
        }
        return hub;
    }
    
    public Hub<AppUserLogin> getMultiSelectHub() {
        if (hubMultiSelect == null) {
            hubMultiSelect = new Hub<AppUserLogin>(AppUserLogin.class);
        }
        return hubMultiSelect;
    }
    
    public AppUserModel getAppUserModel() {
        if (modelAppUser != null) return modelAppUser;
        modelAppUser = new AppUserModel(getAppUserHub());
        modelAppUser.setDisplayName("App User");
        modelAppUser.setPluralDisplayName("App Users");
        modelAppUser.setForJfc(getForJfc());
        modelAppUser.setAllowNew(false);
        modelAppUser.setAllowSave(true);
        modelAppUser.setAllowAdd(false);
        modelAppUser.setAllowRemove(false);
        modelAppUser.setAllowClear(false);
        modelAppUser.setAllowDelete(false);
        modelAppUser.setAllowSearch(false);
        modelAppUser.setAllowHubSearch(false);
        modelAppUser.setAllowGotoEdit(false);
        OALinkInfo li = HubDetailDelegate.getLinkInfoFromDetailToMaster(getOriginalHub());
        modelAppUser.setCreateUI(li == null || !AppUserLogin.P_AppUser.equals(li.getName()) );
        modelAppUser.setViewOnly(getViewOnly());
        // call AppUserLogin.onEditQueryAppUser(AppUserModel) to be able to customize this model
        OAObjectCallbackDelegate.onObjectCallbackModel(AppUserLogin.class, AppUserLogin.P_AppUser, modelAppUser);
    
        return modelAppUser;
    }
    public AppUserErrorModel getAppUserErrorsModel() {
        if (modelAppUserErrors != null) return modelAppUserErrors;
        modelAppUserErrors = new AppUserErrorModel(getAppUserErrors());
        modelAppUserErrors.setDisplayName("App User Error");
        modelAppUserErrors.setPluralDisplayName("App User Errors");
        if (HubDetailDelegate.getLinkInfoFromMasterToDetail(getOriginalHub().getMasterHub()) == HubDetailDelegate.getLinkInfoFromMasterToDetail(getAppUserErrors())) {
            modelAppUserErrors.setCreateUI(false);
        }
        modelAppUserErrors.setForJfc(getForJfc());
        modelAppUserErrors.setAllowNew(true);
        modelAppUserErrors.setAllowSave(true);
        modelAppUserErrors.setAllowAdd(false);
        modelAppUserErrors.setAllowMove(false);
        modelAppUserErrors.setAllowRemove(false);
        modelAppUserErrors.setAllowDelete(true);
        modelAppUserErrors.setAllowSearch(false);
        modelAppUserErrors.setAllowHubSearch(false);
        modelAppUserErrors.setAllowGotoEdit(true);
        modelAppUserErrors.setViewOnly(getViewOnly());
        modelAppUserErrors.setAllowTableFilter(true);
        modelAppUserErrors.setAllowTableSorting(true);
         // default is always false for these, can be turned by custom code in editQuery call (below)
        modelAppUserErrors.setAllowMultiSelect(false);
        modelAppUserErrors.setAllowCopy(false);
        modelAppUserErrors.setAllowCut(false);
        modelAppUserErrors.setAllowPaste(false);
        // call AppUserLogin.onEditQueryAppUserErrors(AppUserErrorModel) to be able to customize this model
        OAObjectCallbackDelegate.onObjectCallbackModel(AppUserLogin.class, AppUserLogin.P_AppUserErrors, modelAppUserErrors);
    
        return modelAppUserErrors;
    }
    
    public HubCopy<AppUserLogin> createHubCopy() {
        Hub<AppUserLogin> hubAppUserLoginx = new Hub<>(AppUserLogin.class);
        HubCopy<AppUserLogin> hc = new HubCopy<>(getHub(), hubAppUserLoginx, true);
        return hc;
    }
    public AppUserLoginModel createCopy() {
        AppUserLoginModel mod = new AppUserLoginModel(createHubCopy().getHub());
        return mod;
    }
}

