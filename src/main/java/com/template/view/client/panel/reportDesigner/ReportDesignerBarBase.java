// Generated by OABuilder 
package com.template.view.client.panel.reportDesigner;

import java.awt.*;
import java.awt.event.*;
import java.util.logging.*;
import javax.swing.*;
import com.template.delegate.ModelDelegate;
import com.template.model.*;
import com.template.model.oa.*;
import com.template.model.search.*;
import com.template.model.oa.propertypath.*;
import com.template.resource.Resource;
import com.template.view.oa.*;
import com.viaoa.hub.*;
import com.viaoa.jfc.*;

public class ReportDesignerBarBase {
    private static Logger LOG = Logger.getLogger(ReportDesignerBarBase.class.getName());
    
    protected JPanel cardPanel;
    protected CardLayout cardLayout;
    protected OATree tree;
    
    public static final String CARD_Splash = "splash";
    public static final String CARD_ReportClasses = "ReportClasses";
    
    public ReportDesignerBarBase() {
        cardLayout = new CardLayout();
        cardPanel = new JPanel(cardLayout);
        setup();
    }
    
    public JPanel getPanel() {
        return cardPanel;
    }
    
    protected void setup() {
        ImageIcon icon = Resource.getJarIcon("reportDesignerSplash.png");
        JLabel lbl = new JLabel("Report Designer", icon, JLabel.CENTER);
        lbl.setFont(lbl.getFont().deriveFont(20.0f));
        lbl.setVerticalTextPosition(SwingConstants.TOP);
        lbl.setHorizontalTextPosition(SwingConstants.CENTER);
        cardPanel.add(lbl, CARD_Splash);
        cardLayout.show(cardPanel, CARD_Splash);
    
        getTree();
        OATreeTitleNode ttNode;
    
        // ReportClasses - ReportClasses - 
        Hub<ReportClass> hubReportClass = ModelDelegate.getReportClasses().createSharedHub();
        ReportClassJfc jfcReportClass = new ReportClassJfc(hubReportClass) {
            JPanel panx;
            @Override
            public void showCardPanel(final String name) {
                ReportDesignerBarBase.this.cardLayout.show(ReportDesignerBarBase.this.cardPanel, CARD_ReportClasses);
                if (panx != null) {
                    super.showCardPanel(name);
                    return;
                }
                SwingWorker<Void, Void> sw = new SwingWorker<Void, Void>() {
                    volatile Exception ex;
                    @Override
                    protected Void doInBackground() throws Exception {
                        try {
                            panx = getCardPanel();
                        }
                        catch (Exception e) {
                            ex = e;
                        }
                        return null;
                    }
                    @Override
                    protected void done() {
                        if (ex != null) {
                            LOG.log(Level.WARNING, "UI exception creating ReportClassJfc", ex);
                            JOptionPane.showMessageDialog(null, "Exception while creating UI, message sent to tech support", "UI Exception", JOptionPane.ERROR_MESSAGE);
                        }
                        if (panx == null) panx = new JPanel();
                        ReportDesignerBarBase.this.cardPanel.add(panx, CARD_ReportClasses);
                        showCardPanel(name);
                    }
                };
                sw.execute();
            }
            @Override
            public OATable createTable() {
                OATable table = super.createTable();
                table.setPreferredRows(15);
                return table;
            }
        };
        jfcReportClass.getModel().setPluralDisplayName("ReportClasses");
        jfcReportClass.getModel().setAllowAdd(false);
        jfcReportClass.getModel().setAllowDownload(true);
        jfcReportClass.getModel().setAllowRemove(false);
        jfcReportClass.getModel().setAllowSearch(false);
        // ReportClass isProcessed=true
        // jfcReportClass.getModel().setAllowDelete(false);
        jfcReportClass.getModel().setAllowClear(false);
        jfcReportClass.getModel().setAllowCut(false);
        jfcReportClass.getModel().setAllowPaste(false);
        jfcReportClass.getModel().setAllowNew(true);
        ttNode = jfcReportClass.getTreeTitleNode();
        tree.add(ttNode);
        ttNode.add(jfcReportClass.getTreeNode());
        cardPanel.add(new JLabel("loading ReportClasses ...", Resource.getJarIcon("wait.png"), JLabel.CENTER), CARD_ReportClasses);
    }
    protected OATree getTree() {
        if (tree != null) return tree;
        tree = new OATree(18) {
            @Override
            public void nodeSelected(OATreeNode node) {
                super.nodeSelected(node);
                if (node == null) {
                    ReportDesignerBarBase.this.cardLayout.show(ReportDesignerBarBase.this.cardPanel, ReportDesignerBarBase.this.CARD_Splash);
                }
            }
        };
        tree.setAllowDnD(true);
        return tree;
    }
}

